Imports System.Web
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Data
Imports System.Data.SqlClient
Imports System.Web.Script.Services
Imports System.Web.Script.Serialization
Imports Connection

' To allow this Web Service to be called from script, using ASP.NET AJAX, uncomment the following line.
<System.Web.Script.Services.ScriptService()>
<WebService(Namespace:="http://tempuri.org/")>
<WebServiceBinding(ConformsTo:=WsiProfiles.BasicProfile1_1)>
<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()>
Public Class WebService_JobStatusModification
    Inherits System.Web.Services.WebService

    Dim db As New DBConnection
    Dim js As New JavaScriptSerializer()
    Dim data As New HelloWorldData()
    Dim dataTable As New DataTable()
    Dim str As String

    Dim GBLUserID As String
    Dim GBLUserName As String
    Dim GBLCompanyID As String
    Dim GBLFYear As String

    '---------------Open Master code---------------------------------

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetJobCardNo() As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))

        str = "SELECT  ISNULL(JCD.JobBookingJobCardContentsID, 0) AS JobBookingJobCardContentsID,NULLIF (JCD.JobCardContentNo, '') AS JobCardContentNo  " &
              " FROM   JobBookingJobCard As JC   INNER JOIN   JobBookingJobCardContents As JCD On JCD.JobBookingID = JC.JobBookingID And JCD.CompanyID = JC.CompanyID     " &
              " WHERE (JCD.CompanyID = '" & GBLCompanyID & "')  AND (ISNULL(JC.IsDeletedTransaction, 0) = 0)    ORDER BY JobCardContentNo"

        db.FillDataTable(dataTable, str)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        js.MaxJsonLength = 2147483647
        Return js.Serialize(data.Message)
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetAfterJobCardData(ByVal JobBookingJobCardContentsID As String) As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))

        str = "Select  JS.SequenceNo as SN, Isnull(PM.ProcessID,0) as ProcessID, nullif(PM.ProcessName ,'') as ProcessName, nullif(JS.RateFactor ,'') as RateFactor,  " &
               " Isnull(JS.ToBeProduceQty,0) As ToBeProduceQuantity,    " &
               " Isnull((Select Sum(Isnull(ProductionQuantity,0)) As ProductionQuantity From ProductionEntry Where JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID AND ProcessID = JS.ProcessID   " &
               " And RateFactor = JS.RateFactor And CompanyID = JS.CompanyID),0) As ProductionQuantity,  PE.ConversionValue,   " &
               " Isnull((Select Sum(Isnull(ReadyQuantity,0)) as READY From ProductionEntry Where JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID AND ProcessID = JS.ProcessID AND RateFactor = JS.RateFactor ANd CompanyID = JS.CompanyID),0) as ReadyQuantity,     " &
               " Isnull((Select Sum(Isnull(WastageQuantity,0)) as WastageQuantity From ProductionEntry Where JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID And ProcessID = JS.ProcessID And RateFactor = JS.RateFactor And CompanyID = JS.CompanyID),0) as WastageQuantity,      " &
               " Isnull((Select Sum(Isnull(SuspenseQuantity,0)) as SuspenseQuantity From ProductionEntry Where JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID AND ProcessID = JS.ProcessID AND RateFactor = JS.RateFactor ANd CompanyID = JS.CompanyID),0) as SuspenseQuantity ,     " &
               " Isnull(JS.Status ,'In Queue') as Status,Isnull(JS.JobBookingID,0) As JobBookingID, Isnull(JS.BookingID,0) As BookingID, Isnull(JS.JobBookingJobCardContentsID,0) As JobBookingJobCardContentsID, Isnull(JS.PlanID,0) As PlanID, Isnull(JS.PlanContQty,0) As PlanContQty,  nullif(JS.PlanContentType,'') as  PlanContentType, nullif(JS.PlanContName,'') as  PlanContName, Isnull(JS.Ups,0) As Ups, Isnull(JS.NoOfPass,0) As NoOfPass, Isnull(JS.Pieces,0) As Pieces, Isnull(JS.NoOfStitch,0) As NoOfStitch, Isnull(JS.NoOfLoops,0) As NoOfLoops, Isnull(JS.NoOfColors ,0) As  NoOfColors,isnull('Schedule Release','Schedule Release') as ScheduleRelease      " &
               " From ProcessMaster as PM Inner JOIN JobBookingJobCardProcess as JS On JS.ProcessID = PM.ProcessID AND JS.CompanyID = PM.CompanyID  And JS.IsDeletedTransaction=0  " &
               " Where JS.JobBookingJobCardContentsID = '" & JobBookingJobCardContentsID & "'  AND JS.CompanyID = '" & GBLCompanyID & "' ORDER BY SN Asc"

        db.FillDataTable(dataTable, str)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        js.MaxJsonLength = 2147483647
        Return js.Serialize(data.Message)
    End Function


    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function OperationDetailData(ByVal JobBookingJobCardContentsID As String) As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))
        str = "SELECT JBP.JobBookingJobCardProcessID, JBP.SequenceNo AS SN, MM.MachineName,JBP.PaperConsumptionRequired, JBP.JobBookingJobCardContentsID, JBP.BookingID,JBP.PlanContQty,JBP.PlanContentType,JBP.PlanContName, JBP.JobBookingID, ISNULL(JBP.ProcessID, 0) AS ProcessID, NULLIF (PM.ProcessName, N'') AS ProcessName, NULLIF (JBP.RateFactor, N'') AS RateFactor, NULLIF (JS.JobCardFormNO, N'') AS JobCardFormNo, ISNULL(JS.ScheduleQty, 0) AS ScheduleQty,ISNULL(SUM(ISNULL(PE.ProductionQuantity, 0)), 0) AS ProductionQuantity,PE.ConversionValue, ISNULL(SUM(ISNULL(PE.ReadyQuantity, 0)), 0) AS ReadyQuantity, ISNULL(SUM(ISNULL(PE.WastageQuantity, 0)) , 0) AS WastageQuantity,  ISNULL(SUM(ISNULL(PE.SuspenseQuantity, 0)), 0) AS SuspenseQuantity,  NULLIF (JS.MachineName, N'') AS ScheduledMachine, JS.MachineSpeed AS Speed, Isnull(JS.TotalTimeToBeTaken, 0) AS TimeToBeTaken,Isnull(ISNULL(PE.Status, JS.Status), JBP.Status) AS Status, ISNULL(JS.ScheduleSequenceID, 0) AS ScheduleSequenceID" &
              " FROM JobBookingJobCardProcess AS JBP INNER JOIN ProcessMaster As PM ON PM.ProcessID=JBP.ProcessID And PM.CompanyID=JBP.CompanyID And JBP.IsDeletedTransaction=0 LEFT JOIN JobScheduleRelease AS JS  ON JBP.JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID AND JBP.CompanyID = JS.CompanyID AND JBP.ProcessID = JS.ProcessID AND JBP.RateFactor = JS.RateFactor And JS.IsDeletedTransaction=0 LEFT JOIN MachineMaster AS MM ON MM.MachineId = JS.MachineID AND MM.CompanyID = JS.CompanyID LEFT JOIN ProductionUpdateEntry As PE ON (PE.JobBookingJobCardContentsID = JS.JobBookingJobCardContentsID) AND (PE.ProcessID = JS.ProcessID) AND (PE.JobCardFormNo = JS.JobCardFormNO) AND (PE.RateFactor = JS.RateFactor) AND (PE.CompanyID = JS.CompanyID) And PE.ProductionQuantity>0 " &
              " WHERE (JBP.JobBookingJobCardContentsID = '" & JobBookingJobCardContentsID & "') AND (JBP.CompanyID = '" & GBLCompanyID & "') Group By JBP.JobBookingJobCardProcessID,JBP.PaperConsumptionRequired, PE.ConversionValue,JBP.SequenceNo , MM.MachineName, JBP.JobBookingJobCardContentsID,JBP.JobBookingID, JBP.BookingID,JBP.PlanContQty,JBP.PlanContentType,JBP.PlanContName,JBP.ProcessID , NULLIF (PM.ProcessName, N'') , NULLIF (JBP.RateFactor, N''), NULLIF (JS.JobCardFormNO, N''), ISNULL(JS.ScheduleQty, 0),NULLIF (JS.MachineName, N''),JS.MachineSpeed, JS.TotalTimeToBeTaken , PE.Status, JS.Status , ISNULL(JS.ScheduleSequenceID, 0), JBP.Status ORDER BY SN"
        db.FillDataTable(dataTable, str)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        js.MaxJsonLength = 2147483647
        Return js.Serialize(data.Message)
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetProductionDetailPopUp(ByVal JobBookingJobCardContentsID As String) As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))
        'ROW_NUMBER() OVER (ORDER BY JS.ScheduleSequenceID) 
        str = "Select  JS.SequenceNo As SN, JS.JobBookingJobCardContentsID, ISNULL(JS.ProcessID,0) as ProcessID,Nullif(JS.ContentName,'') As ContentName, nullif(JS.ProcessName,'') as ProcessName, nullif(JS.RateFactor,'') as RateFactor,  nullif(JS.JobCardFormNo,'') as JobCardFormNo, ISNULL(JS.ScheduleQty,0) as ScheduleQty,    " &
              " nullif(MM.MachineName,'') as MachineName, nullif(EM.LedgerName,'') as LedgerName, replace(convert(nvarchar(30),PE.FromTime,106),'','-')  as FromTime, replace(convert(nvarchar(30),PE.ToTime,106),'','-')  as ToTime,         " &
              " Isnull(PUE.ProductionQuantity,0) as ProductionQuantity ,PE.ConversionValue,Isnull(PUE.ReadyQuantity,0) as ReadyQuantity,   Isnull(PUE.WastageQuantity,0) as WastageQuantity,      " &
              " Isnull(PUE.SuspenseQuantity,0) as SuspenseQuantity, nullif(JS.MachineName,'') as ScheduledMachine, nullif(JS.MachineSpeed,'')  as Speed ,nullif(JS.TotalTimeToBeTaken,'')   AS TimeToBeTaken,Isnull(PE.Status , JS.Status) as Status ,isnull(PE.ProductionID,0) as ProductionID  " &
              " From JobScheduleRelease as JS INNER JOIN ProductionEntry as PE ON PE.JobCardFormNO = JS.JobCardFormNO AND Isnull(PE.RateFactor,'') = Isnull(JS.RateFactor,'') AND PE.CompanyID = JS.CompanyID " &
              " And PE.ProcessID = JS.ProcessID And JS.IsDeletedTransaction=0 INNER JOIN ProductionUpdateEntry As PUE On PUE.ProductionID=PE.ProductionID And PUE.CompanyID=PE.CompanyID And PUE.ProductionQuantity>0 LEFT JOIN MachineMaster as MM ON MM.MachineID = PE.MachineID And MM.CompanyID = PE.CompanyID     " &
              " LEFT JOIN LedgerMaster as EM ON EM.LedgerID = PE.EmployeeID ANd EM.CompanyID = PE.CompanyID      " &
              " Where JS.JobBookingJobCardContentsID = '" & JobBookingJobCardContentsID & "' AND JS.CompanyID = '" & GBLCompanyID & "' ORDER BY SN Asc"

        db.FillDataTable(dataTable, str)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        js.MaxJsonLength = 2147483647
        Return js.Serialize(data.Message)
    End Function

    ''---------------------------- Plan Operations Slabs Name------------------------------------------
    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function LoadOperationsSlabs() As String
        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        str = "Select Distinct ProcessID,RateFactor From ProcessMasterSlabs Where ISNULL(RateFactor,'')<>'' And IsLocked=0 And Isnull(IsDeletedTransaction,0)<>1 And CompanyId = " & GBLCompanyID & ""

        db.FillDataTable(dataTable, str)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        Return js.Serialize(data.Message)
    End Function

    ''---------------------------- Plan Operations  ------------------------------------------
    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function LoadOperations() As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        str = " Select Distinct ProcessID, Replace(Nullif(ProcessName,''),'""','') as ProcessName, Nullif(PrePress,'') as PrePress, Nullif(TypeofCharges,'') as TypeofCharges, Nullif(SizeToBeConsidered,'') as SizeToBeConsidered, Round(Isnull(Nullif(Rate,''),0),3) As Rate,Nullif(MinimumCharges,'') as MinimumCharges, Nullif(SetupCharges,'') as SetupCharges, " &
               "Nullif(IsDisplay,'') as IsDisplay, Replace(Nullif(ChargeApplyOnSheets,''),'""','') As ChargeApplyOnSheets, Replace( Nullif(DisplayProcessName,''),'""','') as DisplayProcessName,0 As Amount,'' As RateFactor,'' As AddRow From ProcessMaster WHERE Isnull(IsDeletedTransaction,0)=0 And /*(ProcessID NOT IN (0, - 5, - 1)) And*/ CompanyId = " & GBLCompanyID & "  Order By ProcessName Asc  "

        db.FillDataTable(dataTable, str)

        data.Message = db.ConvertDataTableTojSonString(dataTable)
        Return js.Serialize(data.Message)
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function SaveProcessData(ByVal jsonObjects As Object, ByVal jsonUpdtObjects As Object, ByVal jsonJobObjects As Object, ByVal JobBookingJobCardContentsID As String, ByVal JCNO As String) As String

        Dim dt As New DataTable
        Dim KeyField As String
        Dim AddColName, TableName, AddColValue As String
        AddColName = ""

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))
        GBLUserName = Convert.ToString(HttpContext.Current.Session("UserName"))
        GBLFYear = Convert.ToString(HttpContext.Current.Session("FYear"))
        If db.CheckAuthories("JobStatusModification.aspx", GBLUserID, GBLCompanyID, "CanSave") = False Then Return "You are not authorized to save..!"

        If db.IsDeletable("ProductionID", "ProductionEntry", " Where CompanyID=" & GBLCompanyID & " And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And IsDeletedTransaction=0") = False Then
            Return "You can not add new process, production is made, please delete all transactions.."
        End If

        Try
            Dim dtExist As New DataTable
            Using UpdtTrans As New Transactions.TransactionScope
                'db.ExecuteNonSQLQuery("Delete from JobBookingJobCardProcess WHERE CompanyID='" & GBLCompanyID & "' and JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' ")

                TableName = "JobBookingJobCardProcess"
                AddColValue = "ModifiedDate=Getdate(),ModifiedBy=" & GBLUserID
                str = db.UpdateDatatableToDatabase(jsonUpdtObjects, TableName, AddColValue, 3, " CompanyID=" & GBLCompanyID & " ")
                If str <> "Success" Then
                    UpdtTrans.Dispose()
                    Return "Error: " & str
                End If

                TableName = "JobScheduleRelease"
                AddColValue = "ModifiedDate=Getdate(),ModifiedBy=" & GBLUserID
                str = db.UpdateDatatableToDatabase(jsonObjects, TableName, AddColValue, 3, " CompanyID=" & GBLCompanyID & " ")
                If str <> "Success" Then
                    UpdtTrans.Dispose()
                    Return "Error: " & str
                End If

                TableName = "JobBookingJobCardProcess"
                AddColName = "CreatedDate,CompanyID,CreatedBy"
                AddColValue = "'" & DateTime.Now & "','" & GBLCompanyID & "','" & GBLUserID & "'"
                str = db.InsertDatatableToDatabase(jsonJobObjects, TableName, AddColName, AddColValue, "Job Status Modification", "")
                If IsNumeric(str) = False Then
                    UpdtTrans.Dispose()
                    Return "Error: " & str
                End If

                db.ExecuteNonSQLQuery(" EXEC UpdateQtyJcProcess '" & JCNO & "' , " & GBLCompanyID & " ")

                UpdtTrans.Complete()
                KeyField = "Success"
            End Using

        Catch ex As Exception
            KeyField = "Error: " & ex.Message
        End Try
        Return KeyField

    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function ScheduleReleaseFun(ByVal JobBookingJobCardContentsID As String, ByVal SelectedProcessID As String, ByVal ScheduleID As String) As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))

        db.FillDataTable(dataTable, "EXEC ScheduleReleaseFromWiseProcessWiseStatusModification " & JobBookingJobCardContentsID & " , " & SelectedProcessID & " , " & GBLCompanyID & " , " & ScheduleID)
        data.Message = db.ConvertDataTableTojSonString(dataTable)
        js.MaxJsonLength = 2147483647
        Return js.Serialize(data.Message)
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetMachineWiseLoads(ByVal PId As Integer) As String
        Try
            Dim str As String

            GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
            str = "Select MachineID, MachineName,Case When MachineLoad>0 Then Round(MachineLoad/60,2) Else 0 End As MachineLoadInHr From (Select MM.MachineID, MM.MachineName, (Isnull((Select Sum(Isnull(TotalTimeToBeTaken,0)) as TimeMinutes From JobScheduleReleaseMachineWise Where MachineID = MM.MachineID AND CompanyID = MM.CompanyID  GROUP BY MachineID),0) + Isnull((Select Sum(Isnull(TotalTimeToBeTaken,0)) as TimeMinutes From JobScheduleRelease  Where MachineID = MM.MachineID AND CompanyID = MM.CompanyID  GROUP BY MachineID),0)) As MachineLoad " &
              " From MachineMaster as MM INNER JOIN ProcessAllocatedMachineMaster as P ON P.MachineID = MM.MachineID AND P.CompanyID = MM.CompanyID Where P.ProcessID = " & PId & " AND P.CompanyID =" & GBLCompanyID & ") As A  Order By MachineName"

            db.FillDataTable(dataTable, str)
            data.Message = db.ConvertDataTableTojSonString(dataTable)
            Return js.Serialize(data.Message)
        Catch ex As Exception
            Return ex.Message
        End Try

    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetMachine() As String
        'ByVal UserId As String
        Try
            Dim str As String

            GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))

            str = " Select Distinct isnull(MM.MachineID,0) as MachineID, nullif(MM.MachineName,'') as MachineName, isnull(MM.MachineSpeed,0) as MachineSpeed,isnull(PM.ProcessID,0) as ProcessID  From ProcessMaster as PM INNER JOIN ProcessAllocatedMachineMaster as PAM ON PAM.ProcessID = PM.ProcessID AND PAM.CompanyID = PM.CompanyID INNER JOIN   " &
                  " MachineMaster AS MM ON MM.MachineID = PAM.MachineID AND  PAM.CompanyID = MM.CompanyID Where PAM.CompanyID = " & GBLCompanyID & " Order BY MachineName"

            db.FillDataTable(dataTable, str)
            data.Message = db.ConvertDataTableTojSonString(dataTable)
            Return js.Serialize(data.Message)
        Catch ex As Exception
            Return ex.Message
        End Try

    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function GetContentName(ByVal JobBookingJobCardContentsID As String) As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        str = "Select Distinct isnull(ScheduleID,0) as ScheduleID, nullif(JobCardContentNO,'') as JobCardContentNO,  nullif(JobName,'') as JobName,  nullif(ContentName,'') as ContentName,  isnull(JobBookingJobCardContentsID,0) as JobBookingJobCardContentsID From  JobScheduleRelease Where JobBookingJobCardContentsID = '" & JobBookingJobCardContentsID & "' AND CompanyID = '" & GBLCompanyID & "'"

        db.FillDataTable(dataTable, str)

        data.Message = db.ConvertDataTableTojSonString(dataTable)
        Return js.Serialize(data.Message)
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function SaveFormDetailData(ByVal jsonObjects As Object, ByVal jsonUpdtObjects As Object) As String

        Dim dt As New DataTable
        Dim KeyField As String
        Dim AddColName, TableName, AddColValue As String
        AddColName = ""

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))
        GBLFYear = Convert.ToString(HttpContext.Current.Session("FYear"))
        If db.CheckAuthories("JobStatusModification.aspx", GBLUserID, GBLCompanyID, "CanSave") = False Then Return "You are not authorized to save..!"

        Using updtTrans As New Transactions.TransactionScope
            Try
                If jsonObjects.Length > 0 Then
                    db.FillDataTable(dt, "Select Isnull(Max(SequenceNo),0)+1 As SequenceNo,ScheduleID,CreatedDate From JobScheduleRelease Where JobBookingJobCardContentsID='" & jsonObjects(0)("JobBookingJobCardContentsID") & "' And CompanyID=" & GBLCompanyID & " And Isnull(IsDeletedTransaction,0)=0 Group By ScheduleID,CreatedDate")
                    If dt.Rows.Count = 0 Then Return "Error: Schedule is not made, please create schedule first.."

                    TableName = "JobScheduleRelease"
                    AddColName = "CreatedDate,ModifiedDate,CompanyID,ModifiedBy,SequenceNo,ScheduleID"
                    AddColValue = "'" & dt(0)("CreatedDate") & "','" & DateTime.Now & "','" & GBLCompanyID & "','" & GBLUserID & "','" & dt(0)("SequenceNo") & "','" & dt(0)("ScheduleID") & "'"
                    KeyField = db.InsertDatatableToDatabase(jsonObjects, TableName, AddColName, AddColValue, "", "")
                    If IsNumeric(KeyField) = False Then
                        updtTrans.Dispose()
                        Return "Error: " & KeyField
                    End If
                End If

                TableName = "JobScheduleRelease"
                AddColName = "ModifiedDate=GETDATE(),ModifiedBy=" & GBLUserID & ""
                KeyField = db.UpdateDatatableToDatabase(jsonUpdtObjects, TableName, AddColName, 2, " CompanyID=" & GBLCompanyID & "")
                If KeyField <> "Success" Then
                    updtTrans.Dispose()
                    Return "Error: " & KeyField
                End If

                KeyField = db.ExecuteNonSQLQuery("Update JobScheduleReleaseStatus Set IsScheduleSequenced=1")
                If KeyField <> "Success" Then
                    updtTrans.Dispose()
                    Return "Error: " & KeyField
                End If

                KeyField = "Success"
            Catch ex As Exception
                updtTrans.Dispose()
                KeyField = "Error: " & ex.Message
            End Try
            updtTrans.Complete()
        End Using

        Return KeyField

    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function SaveStatusChange(ByVal JobBookingJobCardContentsID As String, ByVal SelStatus As String, ByVal ProcessID As String, ByVal ScheduleSequenceID As String, ByVal RateFactor As String) As String

        Dim KeyField As String

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))

        Try
            If db.CheckAuthories("JobStatusModification.aspx", GBLUserID, GBLCompanyID, "CanSave") = False Then Return "You are not authorized to save..!"

            str = "Update JobBookingJobCardProcess Set Status='" & SelStatus & "'  WHERE CompanyID='" & GBLCompanyID & "' and JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' and ProcessID='" & ProcessID & "' and RateFactor='" & RateFactor & "'"
            db.ExecuteNonSQLQuery(str)

            str = "Update JobScheduleRelease Set Status='" & SelStatus & "'  WHERE CompanyID='" & GBLCompanyID & "' and ScheduleSequenceID='" & ScheduleSequenceID & "'"
            db.ExecuteNonSQLQuery(str)

            str = "Update ProductionEntry Set Status='" & SelStatus & "' WHERE CompanyID='" & GBLCompanyID & "' And ScheduleSequenceID='" & ScheduleSequenceID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And ProcessID='" & ProcessID & "' and RateFactor='" & RateFactor & "'"
            db.ExecuteNonSQLQuery(str)

            KeyField = "Success"
        Catch ex As Exception
            KeyField = "fail"
        End Try
        Return KeyField
    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function DeleteProductionDetail(ByVal JobBookingJobCardContentsID As String, ByVal ProductionID As String, ByVal ProcessID As String, ByVal RateFactor As String, ByVal JobCardFormNo As String) As String

        Dim dt As New DataTable
        Dim KeyField As String
        Dim AddColName As String
        AddColName = ""

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))
        If db.CheckAuthories("JobStatusModification.aspx", GBLUserID, GBLCompanyID, "CanDelete") = False Then Return "You are not authorized to delete..!"
        If db.IsDeletable("ProductionID", "OutsourcePaymentDetails", "Where IsDeletedTransaction=0 And CompanyID=" & GBLCompanyID & " And JobBookingJobCardContentsID=" & JobBookingJobCardContentsID & " And ProductionID=" & ProductionID) = False Then Return "Production payment is done, you can't delete this entry..!"

        Try
            Using UpdtTransa As New Transactions.TransactionScope
                str = "Delete From  ProductionUpdateEntry WHERE CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' and ProcessID='" & ProcessID & "' And RateFactor='" & RateFactor & "' and ProductionID='" & ProductionID & "'"
            KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                str = "Delete From  ProductionEntry WHERE CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' and ProcessID='" & ProcessID & "' And RateFactor='" & RateFactor & "'  and ProductionID='" & ProductionID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                str = "Delete From  ProductionEntryFormWise WHERE CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And ProcessID='" & ProcessID & "' and ProductionID='" & ProductionID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                '---------------------Delete Consumption Entry------------
                Dim TransId = db.GetColumnValue("ConsumptionTransactionID", "ItemConsumptionMain", " CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And ProductionID='" & ProductionID & "'")
                str = "Delete From  ItemConsumptionMain WHERE CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And ProductionID='" & ProductionID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                str = "Delete From  ItemConsumptionDetail WHERE ConsumptionTransactionID='" & TransId & "' And CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And ProcessID='" & ProcessID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                '---------------------Update Process Status------------
                str = "Update JobBookingJobCardProcess Set Status='In Queue' Where CompanyID='" & GBLCompanyID & "' And ProcessID='" & ProcessID & "' And RateFactor='" & RateFactor & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                '---------------------Update Schedule Status------------
                str = "Update JobScheduleRelease Set Status='In Queue' Where JobCardFormNo='" & JobCardFormNo & "' And CompanyID='" & GBLCompanyID & "' And RateFactor='" & RateFactor & "' And ProcessID='" & ProcessID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                '---------------------Delete Semi Packing Entry------------
                str = "Delete From  JobSemiPackingMain WHERE CompanyID='" & GBLCompanyID & "' And JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                str = "Delete From  JobSemiPackingDetail WHERE JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And CompanyID='" & GBLCompanyID & "'"
                KeyField = db.ExecuteNonSQLQuery(str)
                If KeyField <> "Success" Then
                    UpdtTransa.Dispose()
                    Return KeyField
                End If

                UpdtTransa.Complete()
                KeyField = "Success"
            End Using

        Catch ex As Exception
            KeyField = "fail"
        End Try
        Return KeyField

    End Function

    <WebMethod(EnableSession:=True)>
    <ScriptMethod(ResponseFormat:=ResponseFormat.Json)>
    Public Function DeleteOperation(ByVal JobBookingJobCardContentsID As String, ByVal ProcessID As String, ByVal RateFactor As String) As String

        Dim dt As New DataTable
        Dim KeyField As String
        Dim AddColName As String
        AddColName = ""

        GBLCompanyID = Convert.ToString(HttpContext.Current.Session("CompanyID"))
        GBLUserID = Convert.ToString(HttpContext.Current.Session("UserID"))

        Try
            If db.CheckAuthories("JobStatusModification.aspx", GBLUserID, GBLCompanyID, "CanDelete") = False Then Return "You are not authorized to delete..!"

            str = "Delete From JobBookingJobCardProcess  WHERE CompanyID='" & GBLCompanyID & "' and JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' And RateFactor='" & RateFactor & "' and ProcessID=" & ProcessID
            db.ExecuteNonSQLQuery(str)

            str = "Delete From JobScheduleRelease  WHERE CompanyID='" & GBLCompanyID & "' and JobBookingJobCardContentsID='" & JobBookingJobCardContentsID & "' and RateFactor='" & RateFactor & "' and ProcessID=" & ProcessID
            db.ExecuteNonSQLQuery(str)

            KeyField = "Success"
        Catch ex As Exception
            KeyField = "fail"
        End Try
        Return KeyField

    End Function

    '---------------Close Master code---------------------------------

    Public Class HelloWorldData
        Public Message As [String]
    End Class
End Class